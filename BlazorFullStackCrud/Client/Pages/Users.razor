@page "/users"
@inject IUserService UserService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@*@attribute [Authorize(Roles ="admin")]*@

<PageTitle>Users</PageTitle>

<h3>Users</h3>
<br />

@if (@UserService.Users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid Data="@UserService.Users" TItem="User" PageSize="10" AllowPaging="true"
        AllowFiltering="true" AllowColumnResize="true" AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn TItem="User" Property="UserName" Title="User Name" />
            <RadzenDataGridColumn TItem="User" Property="Email" Title="Email"/>
            <RadzenDataGridColumn TItem="User" Property="Password" Title="Password"/>
        </Columns>
    </RadzenDataGrid>
}
<br />

<button class="btn btn-primary" @onclick="CreateUser">Create New User</button>

@*<table class="table">
    <thead>
        <tr>
            <th>User Name</th>
            <th>Emil</th>
            <th>Password</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in UserService.Users)
        {
            <tr>
                <td>@user.UserName</td>
                <td>@user.Email</td>
                <td>@user.Password</td>

            </tr>
        }
    </tbody>
</table>*@

@code {

    User user = new User { Role = new Role() };

    protected override async Task OnInitializedAsync()
    {
        await UserService.GetUsers();
    }

    //void ShowUser(int id)
    //{
    //    NavigationManager.NavigateTo($"user/{id}");
    //}

    void CreateUser()
    {
       NavigationManager.NavigateTo("/createuser");
    }
}
